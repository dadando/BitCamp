#####문제 은행 2#####

1) 5 ~ 10 개의 배열을 할당하고 33 ~ 50 사이의 난수를 할당하라.

import java.util.Random;

public class Five {
    public static void main(String[] args) {

        int i;
        Random rand = new Random();
        final int FIX = rand.nextInt(6)+5;

        System.out.println(FIX);

        int[] arr = new int[FIX];

        for (i = 0; i < FIX; i++) {
            arr[i] = rand.nextInt(18) + 33;
            System.out.printf("arr[%d] = %d\n", i, arr[i]);
        }
    }
}


2) 주사위 게임을 만들어보자
컴퓨터가 주사위를 굴리고 사용자 입력으로 맞추면 승리 틀리면 실패

import java.util.Random;
import java.util.Scanner;

public class Five {
    public static void main(String[] args) {

        Random rand = new Random();
        Scanner scan = new Scanner(System.in);

        for(;;) {
            int com = rand.nextInt(6) + 1;
            int me = scan.nextInt();

            if (com == me) {
                System.out.println("정답입니다.!");
            } else {
                System.out.println("오답입니다.!");
            }
        }

    }
}

3) 카지노의 3 슬롯 머신을 구현해보도록 한다.

#####단순 작업#####
import java.util.Random;

public class Five {
    public static void main(String[] args) {

        Random rand = new Random();
        final int SLOT = 3;

        int machine1 = rand.nextInt(9)+1;
        int machine2 = rand.nextInt(9)+1;
        int machine3 = rand.nextInt(9)+1;
        int[] arr = new int[SLOT];
        int i;


        arr[0] = machine1;
        System.out.printf("|arr[%d] = %d|" , 0 , arr[0]);

        arr[1] = machine2;
        System.out.printf("|arr[%d] = %d|" , 1 , arr[1]);

        arr[2] = machine3;
        System.out.printf("|arr[%d] = %d|" , 2 , arr[2]);



    }
}

####for문 사용####
Example.java

import java.util.Random;
import java.util.Scanner;

public class Example {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		Random rand = new Random();
		Scanner scan = new Scanner(System.in);
		
		int coin = 1;
		int[] slot = new int[3];
		System.out.println("배팅한 금액: " + coin+"만원");
		
		for(int i=0;i<slot.length; i++) {
			slot[i] = rand.nextInt(9)+1;
			System.out.printf("slot[%d] = %d\t" , i , slot[i]);
		}
		if((slot[0] == slot[1])&&(slot[0] == slot[2])) {
			if(slot[0]==7) {
				System.out.println("JACKPOT: " + 100*coin +"만원");
			}else {
				System.out.println("당첨금액: " + 3*coin + "만원");
			}
		}else if((slot[0]!=slot[1])&&(slot[0]!=slot[2])
				&&(slot[1]!=slot[2])) {
			System.out.println("당첨금액: 0원");
		}else {
			System.out.println("당첨금액: "+1.5*coin+"만원");
		}
		
	}// end main
		
}


####클래스 사용####

###Five.java

public class Five {
    public static void main(String[] args) {

        SlotGame jackpot = new SlotGame();

        jackpot.Sloting();
    }
}

###SlotGame

import java.util.Random;

public class SlotGame {

    Random rand;
    final int SLOT = 3;

    int[] arr;
    int i;

    public SlotGame(){
        rand = new Random();
        arr = new int[SLOT];

    }
    public void Sloting(){
        for (i = 0; i < arr.length; i++) {
            arr[i] = rand.nextInt(9) + 1;
            System.out.printf("||arr[%d] = %d||", i, arr[i]);
        }
        if ((arr[0] == arr[1])&&(arr[0]==arr[2])) {
            System.out.println("\n!!!!3배 당첨~!!!!");
            if (arr[0] == 7) {
                System.out.println("\nㅊㅊㅊㅊㅊㅊㅊㅊ\n 100배 당첨\nㅊㅊㅊㅊㅊㅊㅊㅊ");
            }
        }else if((arr[0]!=arr[1])&&(arr[0]!=arr[2])&&(arr[1]!=arr[2])){
            System.out.println("\n????망했습니다잉~????");
        }else{
            System.out.println("\n!!!!1배 당첨~!!!!");
        }
    }

}


4) 100 부터 시작하여 1 까지의 숫자중 5 의 배수를 출력하시오.

public class Five {
    public static void main(String[] args) {

        int i;

        for(i=100;i>0;i--){
            if(i%5==0){
                System.out.println(i);
            }
        }
    }
}

####클래스 사용 버전####
##Five.java

public class Five {
    public static void main(String[] args) {

        Multiply multiple = new Multiply(100,1);

        multiple.Multi();
    }
}

##Multiply.java

import java.util.Scanner;

public class Multiply {


    final int RANGE = 100;
    final int START = 1;

    Scanner scan;

    int start;
    int end;
    int multiple;



    public Multiply(int start,int end){
        this.start = start;
        this.end = end;

        scan = new Scanner(System.in);

        multiple = scan.nextInt();
    }
    public void Multi(){
        System.out.printf("####%d의 배수####\n" , multiple);

        for(int i=start; i>=end;i--){
            if(i%multiple == 0){
                System.out.println(i);
            }
        }

    }
}


5) 1 ~ 20 까지의 숫자중 2 의 배수를 추출하여 출력한다.

public class Five {
    public static void main(String[] args) {

        int i;

        for(i=1;i<=20;i++){
            if(i%2==0){
                System.out.println(i);
            }
        }
    }
}

####클래스 사용####

###Five.java


public class Five {
    public static void main(String[] args) {

        QuizFive quizquiz = new QuizFive();

        quizquiz.Qfive();
    }
}

###QuizFive.java

import java.util.Scanner;

public class QuizFive {

    Scanner scan;
    int i;
    final int START = 1;
    final int END = 20;
    int multiple;

    public QuizFive(){
        scan = new Scanner(System.in);
        multiple = scan.nextInt();

    }

    public void Qfive(){
        System.out.printf("%d의 배수\n",multiple);
        for(i=START;i<=END;i++){
            if(i%multiple==0){
                System.out.println(i);
            }
        }
    }

}



6) 5 번에서 추출한 2 의 배수들에 피보나치 수열을 값들을 동일한 개수만큼 더해서 출력한다.
진짜 피보나치 1 1 2 3 5 8 13 21 34 ~~~
f(0) = 0
f(1) = 1    
f(n) = f(n-1) + f(n-2)

피보나치 1 3 4 7 11 18 29 47 76 123 ~~~~


public class Five {
    public static void main(String[] args) {

        int i, j;
        final int MAX = 21;
        int num;
        int[] arr = new int[MAX];

        for (i = 2; i < arr.length; i++) {
            arr[1] = 1;
            arr[2] = 3;

            arr[i]=arr[i-2]+arr[i-1];

            if (i%2==0){
                num = arr[i/2]+i;
                System.out.println(num);
            }
        }
    }
}


####클래스 #####

Five.java

public class Five {
    public static void main(String[] args) {

        Fibonacci nacci = new Fibonacci();
        nacci.Fiba();
    }
}


Fibonacci.java

public class Fibonacci {
    int i;
    final int MAX = 21;

    int num;
    int[] arr;

    public Fibonacci(){
        arr = new int[MAX];

    }
    public void Fiba(){
        for(i=2;i<arr.length;i++){
            arr[1] = 1;
            arr[2] = 3 ;
            arr[i] = arr[i-1] + arr[i-2];
            if(i%2==0){
                System.out.printf("2의 배수: %d \n" , i);
                System.out.printf("피보나치 수열: %d\n" , arr[i/2]);
                num = arr[i/2]+i;
                System.out.println(num);
            }
        }
    }
}


7) 6 번에서 구한 값들을 모두 더한 값을 출력하시오.



public class Five {
    public static void main(String[] args) {

        int i, j;
        final int MAX = 21;
        int num,num2 = 0;
        int[] arr = new int[MAX];
    
        for (i = 2; i < arr.length; i++) {
            arr[1] = 1;
            arr[2] = 3;

            arr[i]=arr[i-2]+arr[i-1];

            if (i%2==0){
                num = arr[i/2]+i;
                //System.out.println(num);
                num2 +=num;
            }
        }
        
        System.out.println(num2);
    }
}

###클래스 사용###


public class Five {
    public static void main(String[] args) {

        Fibonacci nacci = new Fibonacci();
        nacci.Fibaba();
    }
}

####6번에서 사용한 클래스에 Fibaba()를 추가#####

public void Fibaba(){

        for(i=2;i<arr.length;i++){
            arr[1] = 1;
            arr[2] = 3 ;
            arr[i] = arr[i-1] + arr[i-2];
            if(i%2==0){

                num = arr[i/2]+i;
                num2 +=num;
            }
        }
        System.out.println(num2);

    }


8) 1 ~ 300 사이의 숫자를 출력한다.
for 문을 돌 때 3 ~ 10 사이의 임의의 난수의 배수를 출력하도록 한다.

ex) 임의의 난수가 4 가 걸림
1 2 3 은 출력되지 않고 4 가 출력
다음 난수가 7 이 걸림
5 6 은 출력되지 않고 7 이 출력
다음 난수는 다시 3 이 걸림
8 은 출력되지 않고 9 가 출력

import java.util.Random;

public class Five {
    public static void main(String[] args) {

        Random rand = new Random();

        final int MAX = 300;
        int i;
        int[] arr = new int[MAX];
        int mult= rand.nextInt(8)+3;
        
        for(i=1; i<=300; i++){

            if(i%mult==0){
                System.out.println(i + " 난수: " + mult);
                mult = rand.nextInt(8)+3;
            }
        }
    }
}


####클래스 버전####

Five.java

public class Five {
    public static void main(String[] args) {

        MultipleRand mulp = new MultipleRand();

        mulp.Multi();
    }
}

MultipleRand.java

import java.util.Random;

public class MultipleRand {

    Random rand;
    int i;
    int mul;

    public MultipleRand(){
        rand = new Random();
        mul = rand.nextInt(8)+3;
    }
    public void Multi(){
        for(i=1 ; i<=300 ; i++){

            if(i%mul==0){
                System.out.println(i + " 난수: " + mul);
                mul = rand.nextInt(8)+3;
            }

        }
    }
}


9) 1 번을 클래스화 해보자

(Class를 쓰지 않고 만든 1번)
5 ~ 10 개의 배열을 할당하고 33 ~ 50 사이의 난수를 할당하라.

import java.util.Random;

public class Five {
    public static void main(String[] args) {

        int i;
        Random rand = new Random();
        final int FIX = rand.nextInt(6)+5;

        System.out.println(FIX);

        int[] arr = new int[FIX];

        for (i = 0; i < FIX; i++) {
            arr[i] = rand.nextInt(18) + 33;
            System.out.printf("arr[%d] = %d\n", i, arr[i]);
        }
    }
}


(Class사용하기)

###Five.java


public class Five {
    public static void main(String[] args) {

        QuizFirst quizfirst = new QuizFirst();

        quizfirst.QuFi();



    }
}

###QuizFirst.java

import java.util.Random;

public class QuizFirst {

    int i;
    Random rand;
    int FIX;
    int[] arr;

    public QuizFirst(){
        rand = new Random();
        FIX = rand.nextInt(6)+5;
        arr = new int[FIX];

    }

    public void QuFi(){

        System.out.println(FIX);

        for(i=0; i< arr.length ; i++){
            arr[i] = rand.nextInt(18)+33;
            System.out.printf("arr[%d] = %d\n", i, arr[i]);
        }
    }


}





10) 2 번을 클래스화 해보자!

((클래스 사용하지 않은 버전))
주사위 게임을 만들어보자
컴퓨터가 주사위를 굴리고 사용자 입력으로 맞추면 승리 틀리면 실패

import java.util.Random;
import java.util.Scanner;

public class Five {
    public static void main(String[] args) {

        Random rand = new Random();
        Scanner scan = new Scanner(System.in);

        for(;;) {
            int com = rand.nextInt(6) + 1;
            int me = scan.nextInt();

            if (com == me) {
                System.out.println("정답입니다.!");
            } else {
                System.out.println("오답입니다.!");
            }
        }

    }
}

((클래스 사용한 버전))

####Five.java

public class Five {
    public static void main(String[] args) {

        GameDice game = new GameDice() ;
        game.secondGameDice();
        
    }
}

####GameDice.java

import java.util.Random;
import java.util.Scanner;

public class GameDice {
    Random rand;
    Scanner scan;

    int com;
    int me;

    public GameDice() {
        rand = new Random();
        scan = new Scanner(System.in);


    }

    public void secondGameDice() {
        for (; ; ) {

            com = rand.nextInt(6) + 1;
            me = scan.nextInt();
            if (com == me) {
                System.out.println("정답입니다. ");
            } else {
                System.out.println("오답입니다. ");
            }
        }
    }
}

######강사님 정답########


public class Test {
    public static void main(String[] args) {
        Dice d = new Dice();

        while(true) {
            d.userInput();
        }
    }
}


import java.util.Random;
import java.util.Scanner;

public class Dice {
    final int RANGE = 6;
    final int START = 1;

    Scanner scan;
    Random rand;

    int dice;

    public Dice() {
        scan = new Scanner(System.in);
        rand = new Random();

        dice = rand.nextInt(RANGE) + START;

        System.out.println("게임을 시작한다.");
    }

    public void userInput() {
        int tmp;
        System.out.print("맞춰봐 ~ : ");

        tmp = scan.nextInt();

        chkUserInput(tmp);
    }

    public void chkUserInput(int ans) {
        if(ans == dice) {
            System.out.println("승리");
        } else {
            System.out.printf("패배: %d\n", dice);
        }

        reRoll();
    }

    public void reRoll() {
        dice = rand.nextInt(RANGE) + START;
    }
}




11) 6 개의 배열에 5 ~ 10 사이의 난수를 할당한다.
       중복이 발생하지 않게 만든 이후에 오름차순으로 정렬한다.

##########Insertion  sort################

(((클래스 사용하지 않은 버전)))

하는중 ~ING
import java.util.Random;

public class Five {
    public static void main(String[] args) {

        Random rand = new Random();

        final int START = 5;
        final int RANGE = 6;
        int i,j,key;
        int[] arr = new int[RANGE+1];
        int[] idx = new int [RANGE+1];

        for(i=1;i<arr.length;i++){
            arr[i] = rand.nextInt(RANGE)+START;
            idx[i] = arr[i];
            for(j=i+1;j<arr.length;j++) {
                if (arr[i] == idx[j]) {
                    i--;
                }
            }
            System.out.println(arr[i]);
        }
        for(i=2; i<arr.length; i++) {

            key = arr[i];

            for(j=i-1; arr[j]>key;j--){
                arr[j+1]=arr[j];
                if(j==0){
                    break;
                }

            }
            arr[j] = key;

        }
        for(i=1; i<arr.length; i++) {
            //System.out.printf("arr[%d] = %d\n", i, arr[i]);
        }
    }
}




####강사님 답안 (클래스 사용)####




RandArrayAlloc.java

import java.util.Arrays;
import java.util.Random;

public class RandArrayAlloc {
    Random rand;
    int[] arr;

    public RandArrayAlloc(int start, int end) {
        rand = new Random();
        arr = new int[rand.nextInt(end - start + 1) + start];
    }

    public RandArrayAlloc(int num) {
        rand = new Random();
        arr = new int[num];
    }

    public void allocArrValue(int start, int end) {
        for(int i = 0; i < arr.length; i++) {
            arr[i] = rand.nextInt(end - start + 1) + start;
        }
    }

    public void nonDupAllocArrValue(int start, int end) {
        for(int i = 0; i < arr.length; i++) {
            arr[i] = rand.nextInt(end - start + 1) + start;
            System.out.printf("arr[%d] = %d\n", i, arr[i]);
            if(chkDuplicate(i)) {
                i--;
                continue;
            }
        }
    }

    public boolean chkDuplicate(int idx) {
        for(int i = 0; i < idx; i++) {
            if(arr[i] == arr[idx]) {
                System.out.printf("idx = %d, arr[%d] = %d - Duplicate!!!\n", idx, i, arr[i]);
                return true;
            }
        }

        return false;
    }

    @Override
    public String toString() {
        return "RandArrayAlloc{" +
                "arr=" + Arrays.toString(arr) +
                '}';
    }
}



Test.java

public class Test {
    public static void main(String[] args) {
        RandArrayAlloc raa = new RandArrayAlloc(6);

        raa.nonDupAllocArrValue(5, 10);
        System.out.println(raa);
    }
}




























































4) 100 부터 시작하여 1 까지의 숫자중 5 의 배수를 출력하시오.
4번문제 강사님 답안

((클래스))
Multiple.java

import java.util.Arrays;
import java.util.Random;

public class Multiple {
    final int START = 3;
    final int RANGE = 8;

    int[] arr;
    int[] extract;

    int start, end;

    int range;
    int extractRange;

    int multiple;
    boolean reverse;

    int loopRandRange;

    Random rand;

    public Multiple(int start, int end, int multiple) {
        this.start = start;
        this.end = end;

        if(start < end) {
            reverse = false;
            range = end - start + 1;
        } else {
            reverse = true;
            range = start - end + 1;
        }

        arr = new int[range];
        this.multiple = multiple;
    }

    // 자기 자신을 호출함(this == 클래스 이름 자체인 Multiple)
    public Multiple(int start, int end) {
        this(start, end, 0);

        rand = new Random();
        loopRandRange = rand.nextInt(RANGE) + START;
    }

    public void printRandLoop() {
        for(int i = start; i < end; i++) {
            if(i % loopRandRange == 0) {
                System.out.printf("loopRand = %d - %d\n", loopRandRange, i);
                loopRandRange = rand.nextInt(RANGE) + START;
            }
        }
        System.out.printf("loopRand = %d\n", loopRandRange);
    }

    public void printMultipleElem() {
        if(reverse) {
            for (int i = start; i >= end; i--) {
                if (i % multiple == 0) {
                    System.out.println(i);
                }
            }
        } else {
            for (int i = start; i <= end; i++) {
                if (i % multiple == 0) {
                    System.out.println(i);
                }
            }
        }
    }

    public void allocExtract() {
        extractRange = range / multiple;
        extract = new int[extractRange];

        int cnt = 0;

        if(reverse) {
            for (int i = start; i >= end; i--) {
                if (i % multiple == 0) {
                    extract[cnt++] = i;
                }
            }
        } else {
            for (int i = start; i <= end; i++) {
                if (i % multiple == 0) {
                    extract[cnt++] = i;
                }
            }
        }
    }

    public int[] getExtract() {
        return extract;
    }

    public int getExtractRange() {
        return extractRange;
    }

    @Override
    public String toString() {
        return "Multiple{" +
                "extract=" + Arrays.toString(extract) +
                '}';
    }
}


((본문))
Test.java

public class Test {
    public static void main(String[] args) {
        Multiple m = new Multiple(100, 1, 5);

        m.printMultipleElem();
    }
}






































