10장 파일 입출력에 사용되는 자바 클래스들

Reader 나 Writer 는 문자스트림 구조
input or output 은 바이트스트림 구조

#FileReader 클래스
1) 파일을 엽니다.
FileReader reader = new FileReader("poem.txt") : 해당 파일을 연다.

2)파일을 읽습니다.
data = reader.read(); ->>> 읽어들일때 리턴타입은 int타입으로 반환된다.
ex)
while(true){
   int data = reader.read();   ->> 프로그램에서 int보다 작은 타입은 int로 변환해서 받아들인다.
   if (data<0)    ->> 파일의 끝을 표시하기위해 '-1' 로 저장된다. 그전까지 읽기위해 범위를 지정.
       break;
   char ch = (char) data;
   // 데이터 처리 로직이 들어가는 부분.
}
3단계) 파일을 닫습니다.
reader.close();

해당파일이 없을때 오류가 발생한다. 그러므로 예외처리를 꼭 기술해야 된다.

Ex) 파일을 읽을때 한문자씩 읽는다.
package FileEx;

import java.io.*;

public class ReaderExample1 {

	public static void main(String[] args) {
		// TODO 파일이 없을때 예외처리.
		FileReader reader = null;
		try {
			reader = new FileReader("poem.txt");
			while(true) {
				int data = reader.read();
				if(data==-1)
					break;
				char ch = (char)data;
				System.out.print(ch);
			}
		}
		catch(FileNotFoundException fnfe) {
			System.out.println("파일이 존재하지 않습니다.");
		}
		catch(IOException ioe) {
			System.out.println("파일을 읽을 수 없습니다.");
		}
		finally {
			try {
				reader.close();
			}
			catch(Exception e) {
				
			}
		}
	}
}

#한꺼번에 여러 문자를 읽는 read메소드
int num = reader.read(arr); //배열을 사용

#FileWriter 클래스
 : 텍스트를 파일에 쓰는 클래스

Ex)
package FileEx;

import java.io.*;
public class WriterExample1 {

	public static void main(String[] args) {
		// TODO FileWriter 예제
		FileWriter writer = null;
		try {
			writer = new FileWriter("output.txt");
			char arr[] = {'뇌','를',' ','자','극','하','는',' ','J','a','v','a'};
			for(int cnt=0;cnt<arr.length;cnt++) {
				writer.write(arr[cnt]);
			}
		}
		catch(IOException ioe) {
			System.out.println("파일로 출력할 수 없는다.");
		}
		finally {
			try {
				writer.close();
			}
			catch (Exception e) {
				
			}
		}
	}
}

#한꺼번에 여러 문자를 출력하는 wirte 메소드
 writer.write(arr); //배열사용

#FileOutputStream 클래스
 : 바이트 데이터를 파일에 쓰는 클래스
쓰는게 Output 읽는게 Input
Ex)
package FileEx;

import java.io.*;

public class OutputStreamExample1 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		FileOutputStream out = null;
		try {
			out = new FileOutputStream("output.dat");
			byte arr[] = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9,
					 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 };
			for (int cnt=0;cnt<arr.length;cnt++) {
				out.write(arr[cnt]);
			}
		}
		catch(IOException ioe) {
			System.out.println("파일로 출력할 수 없습니다.");
		}
		finally{
			try{
				out.close();
			}
			catch(Exception e) {
				
			}
		}

	}

}

#FileInputStream클래스
 : 파일로부터 바이트 단위로 데이터를 읽는 클래스
Ex)
package FileEx;

import java.io.*;

public class FileDump {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		if(args.length<1) {
			System.out.println("Usage: javaFileDump<filename>");
			return;
		}
		FileInputStream in =null;
		try {
			in = new FileInputStream(args[0]);
			byte arr[] = new byte[16];
			while(true) {
				int num = in.read(arr);
				if(num<0)
					break;
				for(int cnt=0;cnt<num;cnt++) {
					System.out.printf("%02X ",arr[cnt]);
				}
				System.out.println();
			}
		}
		catch(FileNotFoundException fnfe) {
			System.out.println(args[0] + "파일이 존재하지 않습니다.");
		}
		catch(IOException ioe) {
			System.out.println(args[0]+"파일을 읽을 수 없습니다.");
		}
		finally {
			try {
				in.close();
			}
			catch(Exception e) {
				
			}
		}
	}

}

#입출력 기능/성능 향상 클래스들
먼저 File클래스들의 객체를 생성하고 그 객체를 파라미터로 사용한다.
 
package UpgradeEx;

import java.io.*;

public class DataOutputExample1 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		DataOutputStream out = null;
		try {
			out = new DataOutputStream(new FileOutputStream("output.dat"));
			int arr[] = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 };
			for(int cnt=0;cnt<arr.length;cnt++){
				out.writeInt(arr[cnt]);
			}
		}
		catch(IOException ioe) {
			System.out.println("파일로 출력할 수 없습니다.");
		}
		finally {
			try {
				out.close();
			}
			catch(Exception e) {
				
			}
		}
	}

}

package UpgradeEx;

import java.io.*;

public class DataInputExample1 {

	public static void main(String[] args){
		// TODO Auto-generated method stub
		DataInputStream in = null;
		try {
			in = new DataInputStream(new FileInputStream("output.dat"));
			while(true) {
				int data = in.readInt();
				System.out.println(data);
			}
		}
		catch(FileNotFoundException fnfe) {
			System.out.println("파일이 존재하지 않습니다.");
		}
		catch(EOFException eofe) {
			System.out.println("끝");
		}
		catch(IOException ioe) {
			System.out.println("파일을 읽을 수 없습니다.");
			
		}
		
		finally {
			try {
				in.close();
			}
			catch(Exception e){
				
			}
		}
	}

}

#ObjectOutputStream / ObjectInputStream 클래스
*ObjectOutputStream
package UpgradeEx;

import java.io.*;
import java.util.*;
public class ObjectOutputExample1 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		ObjectOutputStream out = null;
		try {
			out = new ObjectOutputStream(new FileOutputStream("output.dat"));
			out.writeObject(new GregorianCalendar(2006, 0, 14));
			out.writeObject(new GregorianCalendar(2006, 0, 15));
			out.writeObject(new GregorianCalendar(2006, 0, 16));
		}
		catch(IOException ioe) {
			System.out.println("파일로 출력할 수 없습니다.");
		}
		finally {
			try {
				out.close();
			}
			catch(Exception e) {
				
			}
		}

	}

}
*ObjectInputStream
package UpgradeEx;

import java.io.*;
import java.util.*;

public class ObjectInputExample1 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		ObjectInputStream in = null;
		try {
			in = new ObjectInputStream(new FileInputStream("output.dat"));
			while(true) {
				GregorianCalendar calendar = (GregorianCalendar)in.readObject();
				int year = calendar.get(Calendar.YEAR);
				int month = calendar.get(Calendar.MONTH)+1;
				int date = calendar.get(Calendar.DATE);
				System.out.println(year+"/"+month+"/"+date);
			}
		}
		catch(FileNotFoundException fnfe) {
			System.out.println("파일이 존재하지 않습니다.");
		}
		catch(EOFException eofe) {
			System.out.println("끝");
		}
		catch(IOException ioe) {
			System.out.println("파일을 읽을 수 없습니다.");
		}
		catch(ClassNotFoundException cnfe) {
			System.out.println("해당 클래스가 존재하지 않습니다.");
		}
		finally {
			try {
				in.close();
			}
			catch(Exception e) {
				
			}
		}

	}

}

#기존의 클래스를 직렬화하고 싶으면
import java.io.Serializable; 을쓰고
클래스명 옆에 implements Serializable 을 붙이면된다.
이때, 직렬화 대상은 필드만 가능하다.

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!예제!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
package UpgradeEx;
import java.io.*;

public class SungjukOutput {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		ObjectOutputStream out = null;
		Sungjuk arr[] = new Sungjuk[3];
		try {
			out = new ObjectOutputStream(new FileOutputStream("sungjuk.dat"));
			for(int i=0;i<arr.length;i++) {
				arr[i]= new Sungjuk();
				arr[i].input();
				arr[i].process();
				out.writeObject(arr[i]);
			}
		}
		catch(IOException ioe) {
			System.out.println("파일로 출력할 수 없습니다.");
		}
		finally {
			try {
				out.close();
			}
			catch(Exception e) {
				
			}
		}
	}

}
package UpgradeEx;
import java.io.*;
import java.util.Scanner;

public class SungjukInput {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		ObjectInputStream in = null;
		Scanner scan = new Scanner(System.in);
		
		try {
			in = new ObjectInputStream(new FileInputStream("sungjuk.dat"));
			while(true) {
				Sungjuk pyo = (Sungjuk)in.readObject();
				pyo.output();
				/*
				String num = pyo.num;
				String name = pyo.name;
				int kor = pyo.kor;
				int eng = pyo.eng;
				int math = pyo.math;
				int tot = pyo.tot;
				double avg = pyo.avg;
				String grade = pyo.grade;
				System.out.printf("%4s %4s %d %d %d %d %6.2f %s \n",
						num,name,kor,eng,math,tot,avg,grade);
				*/
			}
			
		}
		catch(FileNotFoundException fnfe) {
			System.out.println("파일이 존재하지 않습니다.");
				
		}
		catch(EOFException eofe) {
			System.out.println("끝");
		}
		catch(IOException ioe) {
			System.out.println("파일을 읽을 수 없습니다.");
		}
		catch(ClassNotFoundException cnfe) {
			System.out.println("해당 클래스가 존재하지 않습니다.");
		}
		finally {
			try {
				in.close();
			}
			catch(Exception e) {
					
			}
		}
	}
}


문제1 FileDump 내용을 읽어서 내용을 그대로 뿌려준다.
package Practice;

import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;

public class FileDump2 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		if(args.length<1) {
			System.out.println("Usage: java FileDump <filename>");
			return;
		}
		FileReader in =null;
		try {
			in = new FileReader(args[0]);
			while(true) {
				int num = in.read();
				if(num<0)
					break;
				System.out.printf("%c", (char)num);
			}
		}
		catch(FileNotFoundException fnfe) {
			System.out.println(args[0] + "파일이 존재하지 않습니다.");
		}
		catch(IOException ioe) {
			System.out.println(args[0]+"파일을 읽을 수 없습니다.");
		}
		finally {
			try {
				in.close();
			}
			catch(Exception e) {
				
			}
		}
	}

}


문제2 FileDump와 같은내용을 갖는 FileDump.java.bak 백업파일을 만들기
        명령행 매개변수 runAs -> arguments -> FileDump.java 뒤에 FileDump.java.bak 붙여쓴다.
package Practice;

import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;

public class FileDump3 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		if(args.length<2) {
			System.out.println("Usage: java FileDump <filename>");
			return;
		}
		FileReader in =null;
		FileWriter out= null;
		try {
			in = new FileReader(args[0]);
			out = new FileWriter(args[1]);
			while(true) {
				int num = in.read();
				if(num<0)
					break;
				out.write((char)num);
			}
		}
		catch(FileNotFoundException fnfe) {
			System.out.println(args[0] + "파일이 존재하지 않습니다.");
		}
		catch(IOException ioe) {
			System.out.println(args[0]+"파일을 읽을 수 없습니다.");
		}
		finally {
			try {
				in.close();
				out.close();
			}
			catch(Exception e) {
				
			}
		}
	}

}

문제3 objectstream 이용해서 성적관리.
package UpgradeEx;
import java.io.EOFException;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.Scanner;


public class SungjukPyo {
	
	static int MAX = 100;
	
	public static void main(String[] args) {
		
		Scanner scan = new Scanner(System.in);
		
		Sungjuk pyo[] = new Sungjuk[MAX];
		
		int menu;
		
		
		while(true) {
			printOut();
			System.out.print("메뉴 선택=> ");
			menu = scan.nextInt();
			System.out.println();
			if(menu == 6) {
				System.out.println("The End...");
				break;
			}
			switch(menu) {
			case 1:
				studentInput(pyo);
				break;
			case 2:
				studentOutput(pyo);
				break;
			case 3:
				studentSearch(pyo);
				break;
			case 4:
				studentRevise(pyo);
				break;
			case 5:
				studentDelete(pyo);
				break;
			default:
			}		
		}	
	}
	
	static void printOut() {
		System.out.println("***메뉴 선택***");
		System.out.println("1.학생정보 입력");
		System.out.println("2.학생정보 출력");
		System.out.println("3.학생정보 조회");
		System.out.println("4.학생정보 수정");
		System.out.println("5.학생정보 삭제");
		System.out.println("6.프로그램 종료");
		System.out.println();
	}
	
	static void studentInput(Sungjuk[] pyo) {
		ObjectInputStream in = null;
		ObjectOutputStream out = null;
		try {
			in = new ObjectInputStream(new FileInputStream("sungjuk.dat"));
			pyo[Sungjuk.cnt] = new Sungjuk();
			pyo[Sungjuk.cnt].input();
			for(int i=0;i<Sungjuk.cnt;i++) {
				pyo[i] = (Sungjuk) in.readObject();
				if(pyo[i].num.equals(pyo[Sungjuk.cnt].num)) {
					System.out.println("**학번 중복 입력 오류**");
					return;
				}
			}
			pyo[Sungjuk.cnt].process();
			Sungjuk.cnt++;
			out = new ObjectOutputStream(new FileOutputStream("sungjuk.dat"));
			for(int i = 0;i<Sungjuk.cnt; i++) {
				out.writeObject(pyo[i]);
			}
			System.out.println("성적 정보 입력 성공!!");
		}
		catch(FileNotFoundException fnfe){
			System.out.println("파일이 존재하지 않습니다.");
			
		}
		catch(EOFException eofe) {
			System.out.println("끝");
		}
		catch(IOException ioe) {
			System.out.println("파일을 읽을 수 없습니다.");
		}
		catch(ClassNotFoundException cnfe) {
			System.out.println("해당 클래스가 존재하지 않습니다.");
		}
		finally {
			try {
				in.close();
				out.close();
			}
			catch(Exception e) {
				
			}
		}
	}
	
	private static void studentOutput(Sungjuk[] pyo) {
		
		ObjectInputStream in = null;
		try {
			in = new ObjectInputStream(new FileInputStream("Sungjuk.dat"));
			
			if(Sungjuk.cnt == 0) {
				System.out.println("출력할 성적정보가 없습니다!!\n");
				return;
			}
			System.out.println("\t\t    *** 성적표 ***");
			System.out.println("===========================================================");
			System.out.println("  학번\t이름\t국어\t영어\t수학\t총점\t평균\t등급");
			System.out.println("===========================================================");
			Sungjuk.totavg = 0.0;
			for(int i = 0;i<Sungjuk.cnt;i++) {
				pyo[i] = (Sungjuk) in.readObject();
				Sungjuk.totavg += pyo[i].avg;
				pyo[i].output();
			}
			System.out.println("===========================================================");
			System.out.printf("\t학생수:%d   전체 평균: %6.2f\n\n",Sungjuk.cnt,Sungjuk.totavg/Sungjuk.cnt);
		}
		catch(FileNotFoundException fnfe) {
			System.out.println("파일이 존재하지 않습니다.");
		}
		catch(EOFException eofe) {
			System.out.println("끝");
		}
		catch(IOException ioe) {
			System.out.println("파일을 읽을 수 없습니다.");
		}
		catch(ClassNotFoundException cnfe) {
			System.out.println("해당 클래스가 존재하지 않습니다.");
		}
		finally {
			try {
				in.close();
			}
			catch(Exception e) {
			}
		}
	}
	
	private static void studentSearch(Sungjuk[] pyo) {
		ObjectInputStream in = null;
		try {
			in = new ObjectInputStream(new FileInputStream("Sungjuk.dat"));
			Scanner scan = new Scanner(System.in);
			System.out.print("조회할 학번 입력=> ");
			String hakbun = scan.next();
			for(int i=0;i<Sungjuk.cnt;i++) {
				pyo[i] = (Sungjuk)in.readObject();
				if(pyo[i].num.equals(hakbun)) {
					System.out.println("===========================================================");
					System.out.println("  학번\t이름\t국어\t영어\t수학\t총점\t평균\t등급");
					System.out.println("===========================================================");
					pyo[i].output();
					System.out.println("===========================================================");
					return;
				}
			}
			System.out.println("\n조회할 학번 입력 오류!!\n");
		}
		catch(FileNotFoundException fnfe) {
			System.out.println("파일이 존재하지 않습니다.");
		}
		catch(EOFException eofe) {
			System.out.println("끝");
		}
		catch(IOException ioe) {
			System.out.println("파일을 읽을 수 없습니다.");
		}
		catch(ClassNotFoundException cnfe) {
			System.out.println("해당 클래스가 존재하지 않습니다.");
		}
		finally {
			try {
				in.close();
			}
			catch(Exception e) {
			}
		}
	}
	
	private static void studentRevise(Sungjuk[] pyo) {
		ObjectOutputStream out = null;
		ObjectInputStream in = null;
		boolean  flag = false;
		
		try {
			in = new ObjectInputStream(new FileInputStream("Sungjuk.dat"));
			Scanner scan = new Scanner(System.in);
			
			System.out.print("수정할 학번 입력 => ");
			String hakbun = scan.next();
			for(int i = 0;i<Sungjuk.cnt;i++) {
				pyo[i] = (Sungjuk) in.readObject();
				if(pyo[i].num.equals(hakbun)) {
					System.out.println("국어 입력=> ");
					pyo[i].kor = scan.nextInt();
					System.out.println("영어 입력=> ");
					pyo[i].eng = scan.nextInt();
					System.out.println("수학 입력=> ");
					pyo[i].math = scan.nextInt();
					pyo[i].process();
					System.out.println("\n성적 정보 수정 성공!!\n");
					flag = true;
				}
			}
			if(flag == true) {
				out = new ObjectOutputStream(new FileOutputStream("sungjuk.dat"));
				for(int i=0;i<Sungjuk.cnt;i++) {
					out.writeObject(pyo[i]);
				}
			}else {
				System.out.println("\n수정할 학번 입력 오류!!\n");
			}
		}
		catch(FileNotFoundException fnfe) {
			System.out.println("파일이 존재하지 않습니다.");
		}
		catch(EOFException eofe) {
			System.out.println("끝");
		}
		catch(IOException ioe) {
			System.out.println("파일을 읽을 수 없습니다.");
		}
		catch(ClassNotFoundException cnfe) {
			System.out.println("해당 클래스가 존재하지 않습니다.");
		}
		finally {
			try {
				in.close();
				out.close();
			}
			catch(Exception e) {
			}
		}	
	}
	
	private static void studentDelete(Sungjuk[] pyo) {
		ObjectInputStream in = null;
		ObjectOutputStream out = null;
		int k = 0;
		boolean flag = false;
		try {
			in = new ObjectInputStream(new FileInputStream("sungjuk.dat"));
			Scanner scan = new Scanner(System.in);
			
			System.out.print("삭제할 학번 입력=> ");
			String hakbun = scan.next();
			
			for(int i=0;i<Sungjuk.cnt;i++) {
				pyo[i] = (Sungjuk)in.readObject();
				if(pyo[i].num.equals(hakbun)) {
					k=i;
					flag = true;
				}
			}
			if(flag == true) {
				for(int i=k; i<Sungjuk.cnt-1;i++) {
					pyo[i]=pyo[i+1];
				}
				Sungjuk.cnt--;
				System.out.println("\n성적정보 삭제 성공\n");
				out = new ObjectOutputStream(new FileOutputStream("sungjuk.dat"));
				for(int i = 0;i<Sungjuk.cnt;i++) {
					out.writeObject(pyo[i]);
				}
			}else {
				System.out.println("\n삭제할 학번 입력 오류\n");
			}
		}
		catch(FileNotFoundException fnfe) {
			System.out.println("파일이 존재하지 않습니다.");
		}
		catch(EOFException eofe) {
			System.out.println("끝");
		}
		catch(IOException ioe) {
			System.out.println("파일을 읽을 수 없습니다.");
		}
		catch(ClassNotFoundException cnfe) {
			System.out.println("해당 클래스가 존재하지 않습니다.");
		}
		finally {
			try {
				in.close();
			}
			catch(Exception e) {
			}
		}	
	}
}

(((클래스)))
package UpgradeEx;
import java.io.Serializable;
import java.util.Scanner;

public class Sungjuk implements Serializable{
	String num, name;
	int kor, eng, math;
	int tot;
	double avg;
	String grade;
	
	static double totavg;
	static int cnt = 0;
	
	Sungjuk(){
		
	}
	
	void input() {
		Scanner scan = new Scanner(System.in);
		
		System.out.print("학번 입력=> ");
		num = scan.next();
		System.out.print("이름 입력=> ");
		name = scan.next();
		System.out.print("국어 점수=> ");
		kor = scan.nextInt();
		System.out.print("영어 점수=> ");
		eng = scan.nextInt();
		System.out.print("수학 점수=> ");
		math = scan.nextInt();
		System.out.println();
		
	}
	void process() {
		tot = kor+eng+math;
		avg = tot/3.;
		
		switch((int)avg/10) {
		case 10:
		case 9:
			grade = "수";
			break;
		case 8:
			grade = "우";
			break;
		case 7:
			grade = "미";
			break;
		case 6:
			grade = "양";
			break;
		default:
			grade = "가";
				
		}
	}
	void output() {
		System.out.printf("%4s\t%3s\t%d\t%d\t%d\t%d\t%3.2f\t%2s\n",num,name,kor,eng,math,tot,avg,grade);
	}
	
}

























