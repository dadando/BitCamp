#8장 세션과 쿠키
세션(Session) : 브라우저를 종료할 때까지 유지

#HTTP프로토콜 특성
 : 데이터를 요청하고 데이터의 결과 값을 받게 되면 바로 연결은 종료

invalidate() : 현재의 세션 정보들을 모두 제거하는 메소드

예제)
#sessionTest.jsp
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%
	String name;
	if(session.getAttribute("name")!=null){
		name=(String)session.getAttribute("name");
	}else{
		name="세션 값 없음";
	}
%>
<html>
<head>
	<title>Session Test</title>
</head>
<body>
	<h2>세션 테스트</h2>
	<input type="button" onclick="location.href='sessionSet.jsp'" value="세션 값 저장">
	<input type="button" onclick="location.href='sessionDel.jsp'" value="세션 값 삭제">
	<input type="button" onclick="location.href='sessionInvalidate.jsp'" value="세션 초기화">
	<h3><%=name %></h3>
	<h3><%=session.getId() %></h3>
</body>
</html>

#sessionSet.jsp
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%session.setAttribute("name","Session Test!!"); %>
<script>
	location.href="sessionTest.jsp";
</script>

#sessionDel.jsp
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%session.removeAttribute("name"); %>
<script>
	location.href="sessionTest.jsp";
</script>

#sessionInvalidate.jsp
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%session.invalidate(); %>
<script>
	location.href="sessionTest.jsp";
</script>


#쿠키(Cookie)
 : 클라이언트 측에서 관리되는 정보를 의미
 : 보안에 매우 취약
 : 브라우저가 종료되더라도 생존기간 동안 데이터가 사라지지 않는다.

#cookieTest.jsp
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%
	Cookie cookie = new Cookie("name","hongkildong");
	cookie.setMaxAge(600);
	response.addCookie(cookie);
%>
<html>
<head>
	<title>Insert title here</title>
</head>
<body>
	<h2><%=cookie.getName() %></h2>
	<h2><%=cookie.getValue() %></h2>
	<h2><%=cookie.getMaxAge() %></h2>
	<a href="cookieTest2.jsp">쿠키 값 불러오기</a>
</body>
</html>

#cookieTest2.jsp
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%
	String name="";
	String value="";
	String cookie=request.getHeader("Cookie");
	
	if(cookie!=null){
		Cookie cookies[]=request.getCookies();
		
		for(int i=0;i<cookies.length;i++){
			if(cookies[i].getName().equals("name")){
				name=cookies[i].getName();
				value=cookies[i].getValue();
			}
		}
	}
%>
<html>
<head>

<title>Insert title here</title>
</head>
<body>
	<h2>쿠키 이름=<%=name %></h2>
	<h2>쿠키 값=<%=value %></h2>
</body>
</html>


#세션을 이용한 로그인 정보 유지
#sessionLogin.jsp
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<html>
<head>
	<title>Session Login</title>
</head>
<body>
	<form action="sessionLogin2.jsp" method="post">
	<table border=0 width=400 height=100>
		<tr bgcolor = "yellow">
			<td align=right><font size=2>아이디: </font></td>
			<td><input type="text" name="id" size=10></td>
		</tr>
		<tr bgcolor="yellow">
			<td align=right><font size=2>비밀번호: </font></td>
			<td><input type="password" name="pass" size=12></td>
		</tr>
		<tr bgcolor="yellow">
			<td colspan=2 align=center><input type="submit" value="로그인">
			<input type="reset" value="다시 작성"></td>
		</tr>
	</table>
	</form>
</body>
</html>

#sessionLogin2.jsp
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%session.setAttribute("id",request.getParameter("id")); %>
<html>
<head>
	<title>Session Login</title>
</head>
<body>
	<h3>로그인 되었습니다.</h3>
	<h3>로그인 아이디: <%=(String)session.getAttribute("id") %></h3>
	<a href="sessionLogout.jsp">로그아웃</a>
</body>
</html>

#sessionLogout.jsp
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%session.removeAttribute("id");%>
<h3>로그아웃 되었습니다.</h3>
<a href="sessionLogin.jsp">로그인 페이지로 이동</a>


#쿠키를 이용한 사용자 화면설정 정보 유지
#cookieExample.jsp
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%
	String language="korea";
	String cookie = request.getHeader("Cookie");
	
	if(cookie!=null){
		Cookie cookies[] = request.getCookies();
		
		for(int i=0;i<cookies.length;i++){
			if(cookies[i].getName().equals("language")){
				language=cookies[i].getValue();
			}
		}
	}
%>
<html>
<head>
	<title>쿠키를 이용한 화면 설정 예제</title>
</head>
<body>
	<%if(language.equals("korea")){ %>
	<h3>안녕하세요. 이것은 쿠키 예제입니다.</h3>
	<%}else{ %>
	<h3>Hello.This is Cookie example.</h3>
	<%} %>
	
	<form action="cookieExample2.jsp" method="post">
		<input type="radio" name="language" value="korea"
		<%if(language.equals("korea")){ %>checked<%} %>>한국어 페이지 보기
		<input type="radio" name="language" value="english"
		<%if(language.equals("english")){ %>checked<%} %>>영어 페이지 보기
		<input type="submit" value="설정">
	</form>
</body>
</html>

#cookieExample2.jsp
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%
	Cookie cookie=new Cookie("language",request.getParameter("language"));
	cookie.setMaxAge(60*60*24);
	response.addCookie(cookie);
%>
<script>
	location.href="cookieExample.jsp"
</script>


#9장 파일 업로드
파일 업로드를 위해서 enctype 속성을 설정해야 한다.

#업로드 모듈 COS라이브러리 (중요!)
다운로드및 설치 방법)
http://www.servlets.com/ 접속 ->(왼쪽 메뉴) com.oreilly.servlet -> 맨아래 cos-20.08.zip다운로드
이후 압축 풀기 -> lib폴더내부 cos.jar파일을 이클립스 내부 WEB-INF 폴더하위 lib폴더에 복사 붙여넣기.

*파일이 저장된 경로: C:\Project156\Jsp_Source\.metadata\.plugins\org.eclipse.wst.server.core\tmp0\wtpwebapps\Practice_JSP\upload

#fileUploadForm.jsp
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<html>
<head>
	<title>FileUpload Form</title>
</head>
<body>
	<form action="fileUpload.jsp" method="post" enctype="multipart/form-data">
	<table border=1  align="center">
		<tr>
			<td colspan=2 align="center"><h3>파일 업로드 폼</h3></td>
		</tr>
		<tr>
			<td>올린 사람:</td><td><input type="text" name="name"></td>
		</tr>
		<tr>
			<td>제목:</td><td><input type="text" name="subject"></td>
		</tr>
		<tr>
			<td>파일명1: </td><td><input type="file" name="fileName1"></td>
		</tr>
		<tr>
			<td>파일명2: </td><td><input type="file" name="fileName2"></td>
		</tr>
		<tr>
			<td colspan=2 align=center><input type="submit" value="전송"></td>
		</tr>
	</table>
	</form>
</body>
</html>

#fileUpload.jsp
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@page import="com.oreilly.servlet.MultipartRequest"%>
<%@page import="com.oreilly.servlet.multipart.DefaultFileRenamePolicy"%>
<%@page import="java.util.*"%>
<%
	String uploadPath = request.getRealPath("upload");;
	//String uploadPath = "C:\\Project156\\upload"; //내가 원하는 경로로 지정할때 사용.
	
	int size=10*1024*1024;
	String name="";
	String subject="";
	String filename1="";
	String filename2="";
	String origfilename1="";
	String origfilename2="";
	
	try{
		MultipartRequest multi = new MultipartRequest(request,uploadPath,size,"utf-8",new DefaultFileRenamePolicy());
		name = multi.getParameter("name");
		subject = multi.getParameter("subject");
		
		Enumeration files = multi.getFileNames();
		
		String file1 = (String)files.nextElement();
		filename1 = multi.getFilesystemName(file1); //실제 업로드된 파일 이름
		origfilename1 = multi.getOriginalFileName(file1); //실제 오리지날 파일 이름
		
		String file2 = (String)files.nextElement();
		filename2 = multi.getFilesystemName(file2);
		origfilename2 = multi.getOriginalFileName(file2);
		}catch(Exception e){
			e.printStackTrace();
		}
%>
<html>
<body>
<form name="filecheck" action="fileCheck.jsp" method="post">
	<input type="hidden" name="name" value="<%=name %>">
	<input type="hidden" name="subject" value="<%=subject %>">
	<input type="hidden" name="filename1" value="<%=filename1 %>">
	<input type="hidden" name="filename2" value="<%=filename2 %>">
	<input type="hidden" name="origfilename1" value="<%=origfilename1 %>">
	<input type="hidden" name="origfilename2" value="<%=origfilename2 %>">
</form>
<a href="#" onclick="javascript:filecheck.submit()">업로드 확인 및 다운로드 페이지 이동</a>
</body>
</html>

#fileCheck.jsp
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%
	request.setCharacterEncoding("utf-8");
	String name=request.getParameter("name");
	String subject=request.getParameter("subject");
	String filename1=request.getParameter("filename1");
	String filename2=request.getParameter("filename2");
	//아래 두줄 추가
	String origfilename1=request.getParameter("origfilename1");
	String origfilename2=request.getParameter("origfilename2");
%>
<html>
<head>
	<title>파일 업로드 확인 및 다운로드</title>
</head>
<body>
올린 사람: <%=name %><br>
제목: <%=subject %><br>
<!-- 파일명 링크 거는 부분 수정함 -->
파일명1 : <a href="file_down.jsp?file_name=<%=filename1 %>"><%=origfilename1 %></a><br>
파일명2 : <a href="file_down.jsp?file_name=<%=filename2 %>"><%=origfilename2 %></a><br>
</body>
</html>

#file_down.jsp
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@page import="java.io.File" %>
<%@page import="java.io.*" %>
<%
	String fileName=request.getParameter("file_name");
	
	String savePath="upload";
	ServletContext context = getServletContext();
	String sDownloadPath = context.getRealPath(savePath);
	String sFilePath = sDownloadPath + "\\" + fileName;
	
	byte b[] = new byte[4096];
	File oFile = new File(sFilePath);
	FileInputStream in = new FileInputStream(sFilePath);
	
	String sMimeType = getServletContext().getMimeType(sFilePath);
	System.out.println("sMimeType>>>"+sMimeType);
	
	//octect-stream은 8비트로 된 일련의 데이터를 뜻합니다. 지정되지 않은 파일 형식을 의미합니다.
	if(sMimeType==null)sMimeType = "application/octet-stream";
	response.setContentType(sMimeType);
	
	//한글 업로드(이 부분이 한글 파일명이 깨지는것을 방지해 줍니다.)
	String sEncoding = new String(fileName.getBytes("utf-8"),"8859_1");
	//이 부분이 모든 파일 링크를 클릭했을 때 다운로드 화면이 출력되게 처리하는 부분 입니다.
	response.setHeader("Content-Disposition","attachment;filename= "+sEncoding);
	
	//서버에 발생하는 예외 문제 해결 : response.getOutputStream()로 인해 발생
	out.clear(); //jsp에서 servlet으로 변활될 때 내부적으로 out 객체가 생성되기 때문에 기존 out객체 초기화함
	out = pageContext.pushBody(); //초기화후 이 문장까지 수행할것.	

	ServletOutputStream out2 = response.getOutputStream();
	int numRead;
	
	//바이트 배열 b의 0번부터 numRead번까지 브라우저로 출력
	while((numRead=in.read(b,0,b.length))!=-1){
		out2.write(b,0,numRead);
	}
	out2.flush();
	out2.close();
	in.close();
%>


#10장 썸네일 이미지
#thumbnailForm.jsp
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<html>
<head>
	<title>썸네일 이미지 폼</title>
</head>
<body align="center">
	<h3>썸네일 이미지 폼 예제</h3>
	<form action="thumbnail.jsp" method="post" enctype="multipart/form-data">
	이미지 파일: <input type="file" name="filename"><p>
	<input type="submit" value = "전송">
	</form>
</body>
</html>

#thumbnail.jsp
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@page import="java.awt.Graphics2D" %>
<%@page import="java.awt.image.renderable.ParameterBlock"%>
<%@page import="java.awt.image.BufferedImage" %>
<%@page import="javax.media.jai.JAI" %>
<%@page import="javax.media.jai.RenderedOp" %>
<%@page import="javax.imageio.ImageIO" %>
<%@page import="com.oreilly.servlet.MultipartRequest" %>
<%@page import="com.oreilly.servlet.multipart.DefaultFileRenamePolicy" %>
<%@page import="java.util.*" %>
<%@page import="java.io.*" %>
<%
	String imagePath=request.getRealPath("/image");
	System.out.println("imagePath= "+imagePath);
	
	int size = 20*1024*1024;
	String filename="";
	
	try{
		MultipartRequest multi = new MultipartRequest(request, imagePath, size, "utf-8", new DefaultFileRenamePolicy());
		
		Enumeration files = multi.getFileNames();
		
		String file = (String)files.nextElement();
		filename = multi.getFilesystemName(file);
	}catch(Exception e){
		e.printStackTrace();
	}
	//RenderableImageOp 나, 이미지를 처리하는 것 외의 클래스에 의해 필요하게 되는 소스 및 파라미터(Object)에 대한 모든 정보를 캡슐화함
	ParameterBlock pb = new ParameterBlock();
	pb.add(imagePath+"/"+filename);
	//PlanerImage 클래스를 상속하며, 이미지에 방금 수행된 연산의 정보를 포함하고 있다.
	RenderedOp rOp = JAI.create("fileload",pb);
	//BufferedImage 객체를 얻어온다.
	BufferedImage bi = rOp.getAsBufferedImage();
	BufferedImage thumb = new BufferedImage(100,100,BufferedImage.TYPE_INT_RGB);
	
	//그래픽스 객체 생성
	Graphics2D g = thumb.createGraphics();
	g.drawImage(bi,0,0,100,100,null);
	
	File file = new File(imagePath+"/sm_"+filename);
	
	//jpg 이미지 저장
	ImageIO.write(thumb,"jpg",file);
%>
<html>
<head>
	<title>Insert title here</title>
</head>
<body>
	-원본 이미지-<br>
	<img src="image/<%=filename %>"><p>
	-썸네일 이미지-<br>
	<img src="image/sm_<%=filename %>"><p>
</body>
</html>



#12장 데이터베이스를 이용한 회원관리 시스템

#커넥션 풀(Connection Pool)
#JNDI (Java Naming and Directory Interface)
 : 명명 서비스 및 디렉토리 서비스에 접근하기 위한 API

#연결확인하기 jdbc
#jdbcTest.jsp
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ page import="java.sql.*" %>
<%
	Connection conn = null;
	String driver = "oracle.jdbc.driver.OracleDriver";
	String url = "jdbc:oracle:thin:@localhost:1521:ORCL";
	
	Boolean connect = false;
	
	try{
		Class.forName(driver);
		conn = DriverManager.getConnection(url,"scott","123456");
		
		connect = true;
		
		conn.close();
	}catch(Exception e){
		connect = false;
		e.printStackTrace();
	}
%>
<html>
<head>
	<title>JDBC 연동 테스트 예제</title>
</head>
<body>
	<h3><%if(connect==true){ %>연결되었습니다.<%}else{ %>연결에 실패하였습니다.<%} %></h3>
</body>
</html>


#META-INF폴더에 context.xml 만들기
<Context>
	<Resource name="jdbc/OracleDB"
	 auth="Container"
	 type="javax.sql.DataSource"
	 username="scott"
	 password="123456"
	 driverClassName="oracle.jdbc.driver.OracleDriver"
	 factory="org.apache.tomcat.dbcp.dbcp2.BasicDataSourceFactory"
	 url="jdbc:oracle:thin:@127.0.0.1:1521:ORCL"
	 maxActive="500"
	 maxIdle="100"/>
</Context>
<!-- 
dbcp일때 factory="org.apache.tomcat.dbcp.dbcp.BasicDataSourceFatory"
dbcp2일때 factory="org.apache.tomcat.dbcp.dbcp2.BasicDataSourceFatory"
 -->

#WEP-INF폴더 web.xml 수정하기
<resource-ref>
	<description>Connection</description>
	<res-ref-name>jdbc/OracleDB</res-ref-name>
	<res-type>javax.sql.DataSource</res-type>
	<res-auth>Container</res-auth>
</resource-ref>
문장을 wep-app태그 사이에 추가하기.

#연결 확인예제
#dbcpAPITest.jsp
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ page import="java.sql.*" %>
<%@ page import="javax.sql.*" %>
<%@ page import="javax.naming.*" %>
<%
	Connection conn = null;
	
	try{
		Context init = new InitialContext();
		DataSource ds = (DataSource)init.lookup("java:comp/env/jdbc/OracleDB");
		conn = ds.getConnection();
		
		out.println("<h3>연결되었습니다.</h3>");
	}catch(Exception e){
		out.println("<h3>연결에 실패하였습니다.</h3>");
		e.printStackTrace();
	}
%>

