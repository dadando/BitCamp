#오라클 DB 세부기능
테이블 : 해당 계정이 갖고 있는 테이블
뷰
인덱스
프로시저
트리거
시퀀스 : 일련번호를 자동으로 생성.

#논리연산자
1) AND : 두가지 모두 참이어야 참.
ex) select * from emp where deptno = 10 and job = 'MANAGER';
2) OR : 두가지 중 한가지만 참이면 참.
ex) select * from emp where deptno = 10 or job = 'MANAGER';
3) NOT : 조건의 반대.
ex) select * from emp where not deptno = 10;
(=) select * from emp where deptno<>10;

#BETWEEN AND 연산자
ex) select * from emp where sal between 2000 and 3000;
 => 급여가 2000과 3000인 사원 정보 조회.
* not을 같이 사용할 수도 있다.
ex) select * from emp where sal not between 2000 and 3000;
 => 급여가 2000이하 3000이상인 사원 정보 조회.

#IN 연산자
 : 특정필드의 값이 조건중 하나만 만족하더라도 출력하도록 하는 표현
ex) select * from emp where comm in(300,500,1400);
=> comm이 300이거나 500이거나 1400인 사원정보.
* not을 같이 사용할 수 있다.
ex) select * from emp where comm not in(300,500,1400);
=> 커미션이 300,500,1400이 모두 아닌 사원정보
ex) select empno,ename from emp where empno not in(7521,7654,7844);
(=) select empno,ename from emp where empno<>7521 and empno<>7654 and empno<>7844;


#LIKE연산자와 와일드카드
*LIKE연산자 : 검색하고자 하는 값을 정확히 모를 경우에도 검색 가능하도록 하기 위해서
                 와일드카드와 함께 사용하여 원하는 내용을 검색하도록 한다.
*와일드카드
 % : 문자가 없거나, 하나 이상의 문자가 어떤 값이 와도 상관없다.
 _  : 하나의 문자가 어떤 값이 와도 상관없다. 2개의 문자가 필요할땐 2개.
ex) select * from emp where ename like 'F%';
=> 이름이 F로 시작하는 사원정보.
ex) select * from emp where ename like 'J%';
=> 이름이 J로 시작하는 사원정보.
ex) select * from emp where ename like '%A%';
=> 이름중 A를 포함하는 사원정보.

##NULL을 위한 연산자 
#IS NULL 과 IS NOT NULL + NULL을 0또는 다른 값으로 변환하기 위한 NVL 함수. ex) nvl(comm,0)
ex) select * from emp where comm is null;
=> 커미션이 null인 사원정보
ex) select * from emp where comm is not null;
=> 커미션이 null이 아닌 사원정보

#정렬을 위한 ORDER BY절
오름차순 : 작은 값부터 큰 값
내림차순 : 큰 값부터 작은 값
NUll의 경우: 오름차순일때는 가장 마지막, 내림차순일때는 가장 먼저.
#키워드#
*오름차순 : ASC (ascending)
ex) select * from emp order by sal asc;
*내림차순 : DESC (descending)
ex) select * from emp order by sal desc;
*디폴트(생략)=오름차순
ex) select * from emp order by sal;

#정렬방식에 여러가지 조건 제시
 : 첫번째 기준에 맞춰 정렬을 하고 그 조건이 같을때 그다음 기준에 맞춰 정렬.
ex) select * from emp order by sal desc,ename asc;
=> 급여 내림차순 기준으로 정렬한뒤, 급여가 같은 사람들은 이름 오름차순 기준으로 정렬.

####예제 문제####

desc emp;
select * from emp;
-- 1. emp 테이블의 필드 목록을 확인하시오.(사원번호와 이름)
select empno,ename from emp;
-- 2. 사원이름순(오름차순) 정렬하시오.
select * from emp order by ename asc;
-- 3. 사원이름순(내림차순) 정렬하시오.
select * from emp order by ename desc;
-- 4. 급여 내림차순으로 사원이름(ename), 급여(sal), 부서코드(deptno)를 조회하시오.
select ename,sal,deptno from emp order by sal desc;
-- 5. 부서코드 오름차순, 급여 내림차순으로 사원이름(ename), 급여(sal), 부서코드(deptno)를 조회하시오.
select ename,sal,deptno from emp order by deptno asc,sal desc;
-- 6. 이름(ename)/입사일자(hiredate)/부서코드(deptno)를 부서코드 오름차순, 입사일자(hiredate) 오름차순으로 조회하시오.
select ename,hiredate,deptno from emp order by deptno asc,hiredate asc;
-- 7. 직급(job) 칼럼의 중복데이터를 하나씩만 조회하시오.
select distinct job from emp;
-- 8. emp테이블의 job 오름차순, sal 내림차순으로 정렬해서 ename 이름, job 직급, sal 급여 칼럼명으로 별칭을 바꿔서 조회하시오.
select ename as "이름",job as 직급,sal "급여" from emp order by job asc,sal desc;
-- 9. 급여가 1000보다 많고 3000보다 작은 직원 조회하기.(급여 내림차순)
select * from emp where sal between 1000 and 3000 order by sal desc;
-- 10. 급여가 1000이하 또는 3000 이상의 직원 검색하기.(급여 내림차순)
select * from emp where sal not between 1000 and 3000 order by sal desc;
-- 11. 직급(job)이 MANAGER 또는 SALESMAN인 직원들을 이름순으로 조회하시오.
select * from emp where job = 'MANAGER' or job = 'SALESMAN' order by ename asc;
-- 12. 부서코드(deptno)가 30인 직원을 조회하시오.
select * from emp where deptno = 30;
-- 13. emp 테이블에서 중복된 부서코드를 한개씩만 조회하시오.
select distinct deptno from emp;
-- 14. 부서코드가 10 또는 20 또는 30인 직원을 조회하시오.(or, in연산자 각각 활용해서 조회)
select * from emp where deptno =10 or deptno=20 or deptno=30;
select * from emp where deptno in(10,20,30);
-- 15. 급여가 1000~3000인 직원을 급여순으로 조회하시오.(and, between연산자 각각 활용해서 조회)
select * from emp where sal between 1000 and 3000 order by sal asc;
select * from emp where sal>=1000 and sal<=3000 order by sal asc;
-- 16. 이름이 SCOTT인 사원을 조회하시오.
select * from emp where ename = 'SCOTT';
-- 17. S로 시작하는 사원을 조회하시오.
select * from emp where ename like 'S%';
-- 18. 사원이름에 'O' 포함된 사원이름을 조회하시오.
select * from emp where ename like '%O%';
-- 19. 연봉을 구한후 이름, 급여, 커미션, 연봉을 조회하시오. 
--   (연봉구하는 식 : 급여(sal)*12개월+보너스(comm))
select ename,sal,comm,sal*12+comm as 연봉 from emp;
-- 20. 커미션이 null이면 0으로 바꾼후 연봉을 다시 계산해서 이름, 급여, 커미션, 연봉을 조회하시오.
select ename,sal,comm,sal*12+nvl(comm,0)as "연봉" from emp;
-- 21. 사원의 급여를 검색해서 '누구누구의 급여는 얼마입니다'로 조회하시오.(|| 결합연산자)
select ename || ' 의 급여는 ' || sal || ' 입니다 ' from emp;
-- 22. emp테이블에서 입사일(hiredate)이 1982년 1월 1일 이전인 사원에 대해 
--     사원의 이름(ename), 입사일, 부서번호(deptno)를 입사일순으로 조회하시오.
select ename,hiredate,deptno from emp where hiredate <= '1982/1/1' order by hiredate asc;
-- 23. emp테이블에서 부서번호가 20번이나 30번인 부서에 속한 사원들에 대하여 
--     이름, 직업코드(job), 부서번호를 이름순으로 조회하시오.(or, in연산자 각각 활용해서 모두 조회)
select ename,job,deptno from emp where deptno in(20,30) order by ename asc;
select ename,job,deptno from emp where deptno=20 or deptno =30 order by ename asc;
-- 24. 연봉이 3000이상인 사원을 출력하시오.
select * from emp where sal >= 3000;
-- 25. emp에서 입사일자가 82년 이후에 입사한 사람의 이름과 입사일자를 입사일자 순으로 출력하시오.
--     (입사일자 오름차순)
select ename,hiredate from emp where hiredate >= '1982/01/01' order by hiredate asc;
-- 26. emp에서 이름이 S로 끝나는 사원의 사원번호와 이름을 출력하시오.
select empno,ename from emp where ename like '%S';
-- 27. emp에서 이름의 두번째 글자에  A가 들어가는 사원의 사원번호와 이름을 출력하시오.
select empno,ename from emp where ename like '_A%';
-- 28. emp에서 매니저를 갖지않는 사원의 이름을 출력하시오.
select ename from emp where mgr is null;
-- 29. emp에서 커미션을 받는 사원의 이름과 커미션을 출력하시오.
select ename,comm from emp where comm is not null and comm <> 0;



######5장 SQL 주요 함수######

1. DUAL 테이블과 SQL 함수 분류


3. 문자 처리 함수

1) LOWER : 소문자로 변환
ex) select 'Welcome to Oracle' as 적용전, lower('Welcome to Oracle') as 적용후 from dual;
ex) LOWER 이용하여 검색하기
    select empno,ename,job from emp where lower(job) = 'manager';

2) UPPER : 대문자로 변환
ex) select 'Welcome to Oracle' as 적용전, upper('Welcome to Oracle') as 적용후 from dual;
ex) UPPER 이용하여 검색하기.
    select empno,ename,job from emp where job = upper('manager');

3) INITCAP : 첫글자만 대문자 나머지는 소문자로 변환
ex) select 'WELCOME TO ORACLE' as 적용전, initcap('WELCOME TO ORACLE') as 적용후 from dual;

4) CONCAT : 문자의 값을 연결

5) SUBSTR : 문자를 잘라 추출 (문자 단위)
ex) select substr('Welcome to Oracle',4,3) from dual;
=> com     : (대상, 시작위치, 추출할 갯수) + 공백도 세야 된다.
ex) select * from emp where substr(hiredate,4,2) = '09';
=> 9월에 입사한 사원의 정보를 출력
ex) select * from emp where substr(ename,-1,1) = 'E';
시작위치가 음수이면 열에서 가장 끝부터 반대로 시작.

6) SUBSTRB : 문자를 잘라 추출 (바이트 단위)
ex) select substr('웰컴투오라클',3,4),substrb('웰컴투오라클',3,4) from dual;
=> substr : 투오라클 / substrb : 컴투  
 : 바이트단위일때 한글은 글자당 2바이트로 계산한다.

7) LENGTH : 문자의 길이를 반환 (문자 단위)      ex) '이기자' => 3
ex) select length('Oracle'),length('오라클') from dual;
Oracle => 6, 오라클 => 3

8) LENGTHB : 문자의 길이를 반환 (바이트 단위)  ex) '이기자' => 6
ex) select lengthb('Oracle'),lengthb('오라클') from dual;
Oracle => 6, 오라클 => 6

9) LPAD,RPAD : 문자와 기호를 정렬하여 특정길이의 문자열로 반환
ex) select LPAD('Oracle',20,'#') from dual;
=> 20자리의 문자열안에 Oracle 을 배치하고 남는짜리는 왼쪽부터 #을 채운다.
결과) ##############Oracle
**RPAD는 반대

10) TRIM : 공백 제거 (방향에 따라 LTRIM,RTRIM)
ex) select LTRIM('   Oracle   ') from dual;
=> 왼쪽 공백제거
*RTRIM은 반대
*TRIM은 양쪽다
ex) select TRIM('a' from 'aaaaOracleaaaa') from dual;
=> aaaaOracleaaaa 에서 양쪽 a를 제거.  가운데 a에는 영향x

11) CONVERT : CHAR SET을 변환

12) CHR : ASCll 코드 값으로 변환

13) ASCll : ASCll 코드 값을 문자로 변환

14) REPLACE : 문자열에서 특정 문자를 변경

15) INSTR : 대상 문자열이나 칼럼에서 특정 문자가 나타나는 위치를 알려줍니다.
ex) select instr('WELCOME TO ORACLE','O') from dual;
=> 5 : 처음 'O'가 나타난 위치는 5번째 위치이다.
ex) select instr('WELCOME TO ORACLE','O',6,2) from dual;
=> 12 : 6번째 위치에서 시작해서 2번째 'O'가 나타난 위치.
    instr(대상, 찾을글자, 시작위치, 몇 번째 발견)

16) INSTRB : INSTR의 바이트단위
ex) select instr('데이터베이스','이',3,1),instrb('데이터베이스','이',3,1) from dual;
=> instr : 5 , instrb : 3


4. 날짜 함수

1) SYSDATE : 시스템에 저장된 현재 날짜를 반환.
ex) select sysdate-1 as 어제, sysdate as 오늘, sysdate+1 as 내일 from dual;
ex) select sysdate-hiredate as 근무일수 from emp;
 => 총 근무일수

2) MONTHS_BETWEEN : 두 날짜 사이가 몇 개월인지를 반환
ex) select ename,sysdate,hiredate,months_between(sysdate,hiredate) from emp;

3) ROUND 함수 : 반올림관련
 형식 : ROUND(date,format)
ex) select hiredate, round(hiredate,'MONTH') from emp;
=> 월기준으로 반올림해서 출력. 일수를 반올림해서 월을 조정.

4) TRUNC 함수 : 내림 관련.
ex) select hiredate, trunc(hiredate,'MONTH') from emp;
=> 월기준으로 내림해서 출력. 일수를 내림해서 조정.

5) ADD_MONTHS 함수 : 특정 개월 수를 더한 날짜를 구하는 함수
 형식 : ADD_MONTHS(date,number)
ex) select ename,hiredate,add_months(hiredate,6) from emp; 
=> 고용된 날짜 +6개월

6) NEXT_DAY 함수 : 최초로 도래하는 요일에 해당되는 날짜
 형식 : NEXT_DAY (date,요일)
ex) select sysdate,next_day(sysdate,'수요일') from dual;

7) LAST_DAY 함수 : 해당 달의 마지막날.
ex) select hiredate,last_day(hiredate) from emp;

8) 형변환
---------------------------------------------------------------------------
	 <-TO_NUMBER		  <-TO_CHAR
Number			Character	        Date
	  TO_CHAR ->		   TO_DATE ->
---------------------------------------------------------------------------
#TO_CHAR 함수 날짜형을 문자형으로 변환
ex) select sysdate, to_char(sysdate,'YYYY-MM-DD') from dual;
 => 년-월-일
ex) select sysdate, to_char(sysdate,'YYYY-MM-DD hh24:mi:ss') from dual;
 => 년-월-일 시:분:초   (24를 넣으면 24시간제, 24를 빼면 12시간제)
ex) select sysdate, to_char(sysdate,'YYYY-MM-DD day hh:mi:ss') from dual;
 => 년-월-일 요일 시:분:초
MM-> MON , DAY-> DY 로 표시가능 (약어)
AM이나 PM을 이용하여 오전 오후를 나타낼 수 있음.

#TO_CHAR 함수 숫자형을 문자형으로 변환
ex) select ename,sal,to_char (sal,'L999,999') from emp;
=> L은 각 지역별 통화 기호를 표시
    9 는 자릿수를 나타내며 자릿수가 맞지 않으면 채우지 않음.
    0 으로 하면 0으로 자릿수를 채움
    . 은 소수점   , 은 천단위 구분
ex) select to_char(123456,'000000000'),to_char(123456,'999,999,999') from dual;
=> 0을 사용할때와 9를 사용할때의 차이점.
정수부는 자릿수가 부족하면 #####으로 표시된다. 이는 자릿수 부족을 의미.
소수부는 자동 반올림 처리된다.

#TO_DATE 함수
ex) select ename,hiredate from emp where hiredate = to_date('19810220','YYYYMMDD');
ex) select trunc(sysdate-to_date('2008/01/01','YYYY/MM/DD')) from dual;

#TO_NUMBER 함수
ex) select to_number('20,000','99,999') - to_number('10,000','99,999') from dual;
=> 문자를 숫자형으로 바꾼뒤 계산해서 출력

EX) select empno,ename,nvl(to_char(mgr,'999'),'C E O') as MANAGER from emp where mgr is null;
=> null을 문자형으로 바꿔준뒤 C E O 로 바꿔줌.
== select empno,ename,nvl(to_char(mgr),'C E O') as MANAGER from emp where mgr is null;



