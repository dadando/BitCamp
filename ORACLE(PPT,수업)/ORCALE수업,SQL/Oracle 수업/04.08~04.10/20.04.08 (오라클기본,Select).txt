1장 데이터 베이스
 * 통합된 데이터
 * 저장된 데이터
 * 운영 데이터
 * 공용 데이터

#특징#
1) 실시간 접근성 : 다수의 사용자의 요구에 대해 처리 시간이 몇 초를 넘기지 말아야 한다.

2) 지속적인 변화 : 데이터베이스에 저장된 데이터는 최신의 정보가 정확하게 저장되어 
	            처리되어야 한다.

3) 동시 공유 : 동일 데이터를 동시에 서로 다른 목적으로 사용할 수 있어야 한다.

4) 내용에 대한 참조 : 데이터베이스 내에 있는 데이터 레코드들은 주소나 위치에 의해 
		    참조되는 것이 아니라 가지고 있는 값에 따라 참조해야 한다.

#데이터베이스 관리 시스템(DBMS)
 *데이터베이스 (DataBase)
 : 지속적으로 유지 관리해야 하는 데이터의 집합

 *데이터베이스 관리 시스템(DataBase Management System)
 : 데이터베이스를 공유할 수 있게끔 관리해 주는 소프트웨어 시스템.

#관계형 데이터베이스 관리시스템(RDBMS: Relational DataBase Management System)
 : 가장 일반적인 형태의 DBMS
 : 오라클(Oracle), MYSQL, SQL Server
 *장점
 : 작성과 이용이 쉽고 확장이 용이하다.
 : 처음 데이터베이스를 만든 후 관련된 응용 프로그램들을 변경하지 않고도, 
   새로운 데이터 항목을 테이터베이스에 추가할 수 있다.

 *관계형 데이터베이스 정보를 테이블 형태로 저장한다.
 *테이블은 2차원 형태 행(row,tuple)과 열(column,attribute) 으로 구성한다.

 *데이터 딕셔너리(Data Dictionary: DD)
 : 관계형 데이터베이스에서 객체를 정의하게 되면 그 객체가 가진 메타데이터의 
   정보가 저장되는 곳.
 : 사용자에 의해서 추가,삭제,수정이 불가능하며 오로지 오라클 시스템에 의해서만 가능.

 *SQL (Structured Query Language) (중요!!!!) 
 : 구조적 질의 언어.
 : 사용자와 관계형 데이터베이스를 연결시켜 주는 표준 검색 언어.
 : 데이터베이스에 저장된 데이터를 조회, 입력, 수정, 삭제하는 조작이나.
   테이블을 비롯한 다양한 객체(시퀀스,인덱스 등)를 생성 및 제어하는 역할.
 *SQL의 종류
 1. 데이터 정의어 (DDL) Data Definition Language
   : 생성하는 것이 주된 작업. 테이블 생성, 조작, 삭제
   : ex) create table(생성), alter table(변경), drop table(삭제)
 2. 데이터 조작어 (DML) Data Manipulation Language
   : 추가(insert) 삭제(delete) 갱신(update) 검색(select)가 주된 업무
 3. 데이터 제어어 (DCL) Data Control Language
   : 데이터에 대한 접근 권한 부여가 주된 업무
   : ex) grant(권한부여), revoke(권한취소)

#포트넘버 1521

#사용자계정 종류
SYS  SYSTEM  SCOTT  HR




2장 SQL의 기본

#DESC : 테이블 구조를 살펴보기 위한 명령어

# 문자 데이터를 다루는 타입
 * char(10) : 문자열 데이터를 다루는데 크기가 일정한 경우.
	    할당된 저장공간과 주어진 크기의 편차가 심한 경우 저장공간의
	    낭비를 초래한다.
 * varchar2(10) : 문자열 데이터를 다루는데 크기가 계속 다를 경우 
  	         가장 길게 기준을 잡아주고 사용.
	         저장되는 데이터에 의해 저장공간이 할당되므로 메모리 낭비를
	         줄일 수 있다.
# 숫자 데이터를 다루는 타입
 * NUMBER (10) <= 10자리 정수형 데이터
 * NUMBER (10,2) <= 10자리중 2자리는 소수점인 실수형 데이터

# DATE : 날짜,시간,분,초 등 날짜 및 시간데이터를 저장하기 위한 데이터 형
 기본형식: "YY/MM/DD"

# SELECT 문은 데이터를 조회하기 위한 SQL명령어
 : 세미콜론 ';' 이 문장의 마지막을 나타낸다.
 : 반드시 SELECT와 FROM이라는 2개의 키워드로 구성되어야 한다.
 : 출력하고자 하는 칼럼 이름을 기술한다. 여러개일 경우 ',' 로 구분한다.
 : 모든 칼럼은 '*' 을 사용한다.
 : SQL문에서 사용하는 명령어들은 '대문자'와 '소문자'를 구분하지 않는다.

Ex) 사원에 관련된 정보를 모두 살펴보기 위한 쿼리문
 < 사원 테이블의 이름은 emp >
select * from emp;

#특정 데이터만 보기
ex) select empno,ename from emp;

사원의 이름과 급여와 입사일자만 출력하는 SQL문
select ename,sal,hiredate from emp;


#산술 연산자

  종류      예시
   +	 select sal+comm from emp;
   -	 select sal-100 from emp;
   *	 select sal*12 from emp;
   /	 select sal/2 from emp;
(null과 다른 값을 연산할때 null은 알 수 없는 값이라서 null이 출력된다.)

##별칭##
ex) select sal*12 as "연봉" from emp;
 : 실행결과 column 이름이 연봉으로 바뀐다.
 : as는 생략가능.
 : " " 도 생략가능. 하지만, 이름에 공백이 들어갈 경우엔 생략 불가능.
 : " " 이 없으면 전부 대문자로 출력된다.
 : " " 은 대소문자를 구별해서 출력하고 싶을 때도 사용한다.
 ex) select ename,comm,sal*12+comm,NVL(comm,0)"수 수 료",sal*12+nvl(comm,0)"S a l a r Y" from emp;
 ex2) select deptno as 부서번호,dname as 부서명 from dept;

#null도 데이터.
 : 오라클에서의 null은 매우 중요한 데이터.
 : 오라클에서는 컬럼에 널값이 저장되는 것을 허용한다.

*널의 정의
1. 0도 아니고
2. 빈 공간도 아니다.
***3. '미확정', '알 수 없는 값'을 의미. ***
4. 어떤 값인지 알 수 없지만 어떤 값이 존재한다.
5. ?혹은 ∞의 의미이므로 
6. 연산, 할당, 비교가 불가능하다.

#null을 0또는 다른 값으로 변환하기 위해 NVL 이라는 함수를 사용한다.
ex) select ename,comm,sal*12+comm,nvl(comm,0),sal*12+nvl(comm,0) from emp;
 : NVL(comm,0) <=comm에 있는 null값을 0으로 바꾼다.


#Concatenation 연산자
 : 사전적의미 : 연결.
 : 여러개의 컬럼을 연결할 때 사용하는데 연산자로 " || " 을 사용한다.
ex) select ename || 'is a' || job from emp;
 : 문자열 데이터를 다룰때는 작은 따옴표를 사용해야 한다. 큰따옴표는 별칭.

#DISTINCT 키워드
 : 중복을 제거할 때 사용한다.
ex) select distinct deptno from emp;
ex0 select distinct job from emp;


4장 SELECT로 특정 데이터를 추출하기.

#원하는 행만 얻으려면 제한하는 조건을 SELECT문에 WHERE절을 추가하여 제시한다.
 오라클에서 같다는 '=' 하나만 쓴다. 나머지는 자바랑 같다. 같지 않다는 <>, !=, ^= 3종류.
ex) select * from emp where deptno=10;
 => deptno가 10인 사원 정보만 추출.
ex) select empno,ename,sal from emp where sal>3000; 크다
ex) select empno,ename,sal from emp where sal<3000; 작다
ex) select empno,ename,sal from emp where sal>=3000; 크거나 같다
ex) select empno,ename,sal from emp where sal<=3000; 작거나 같다
ex) select empno,ename,sal from emp where sal<>3000; 다르다 (!= , ^=)

#문자 데이터 조회
ex) 이름이 FORD인 사원을 조회
select empno,ename,sal from emp where ename = 'FORD';
 : 문자열이나 날짜는 반드시 단일 따옴표안에 표시해야 한다.
 : 저장된 데이터 값은 대소문자를 구별하기 때문에 'FORD' 에서 대소문자 구분을 확실히 해야 한다.

#날짜 데이터 조회
 : 문자열 형태로 조회한다.
Ex) select * from emp where hiredate <= '1982/01/01';  
select * from emp where hiredate <= '82/01/01'; 도 가능.


